{"version":3,"sources":["../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js","../node_modules/@mui/material/Switch/switchClasses.js","../node_modules/@mui/material/Switch/Switch.js","../node_modules/@mui/material/FormGroup/formGroupClasses.js","../node_modules/@mui/material/FormGroup/FormGroup.js","../node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js","../node_modules/@mui/material/FormControlLabel/FormControlLabel.js"],"names":["getSwitchBaseUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SwitchBaseRoot","styled","ButtonBase","skipSx","ownerState","_extends","padding","borderRadius","edge","marginLeft","size","marginRight","SwitchBaseInput","cursor","position","opacity","width","height","top","left","margin","zIndex","SwitchBase","React","props","ref","autoFocus","checkedProp","checked","checkedIcon","className","defaultChecked","disabledProp","disabled","disableFocusRipple","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","_objectWithoutPropertiesLoose","useControlled","controlled","default","Boolean","state","setCheckedState","muiFormControl","useFormControl","hasLabelFor","classes","slots","root","capitalize","input","composeClasses","useUtilityClasses","_jsxs","component","clsx","centerRipple","focusRipple","role","undefined","event","children","_jsx","nativeEvent","defaultPrevented","newChecked","target","getSwitchUtilityClass","switchClasses","SwitchRoot","overridesResolver","styles","display","overflow","boxSizing","flexShrink","verticalAlign","colorAdjust","thumb","switchBase","transform","SwitchSwitchBase","color","theme","palette","mode","common","white","grey","transition","transitions","create","duration","shortest","track","backgroundColor","alpha","action","active","hoverOpacity","main","lighten","darken","SwitchTrack","black","SwitchThumb","boxShadow","shadows","Switch","inProps","useThemeProps","sx","composedClasses","getFormGroupUtilityClass","FormGroupRoot","row","flexDirection","flexWrap","FormGroup","getFormControlLabelUtilityClasses","formControlLabelClasses","FormControlLabelRoot","label","labelPlacement","alignItems","WebkitTapHighlightColor","text","FormControlLabel","componentsProps","control","disableTypography","controlProps","forEach","key","Typography","typography"],"mappings":"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","file":"static/js/2.8a7c4d24.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\n\nconst SwitchBaseRoot = styled(ButtonBase, {\n  skipSx: true\n})(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input', {\n  skipSx: true\n})({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n/**\n * @ignore - internal component.\n */\n\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    className,\n    defaultChecked,\n    disabled: disabledProp,\n    disableFocusRipple = false,\n    edge = false,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required,\n    tabIndex,\n    type,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  let disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor && id,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getSwitchUtilityClass(slot) {\n  return generateUtilityClass('MuiSwitch', slot);\n}\nconst switchClasses = generateUtilityClasses('MuiSwitch', ['root', 'edgeStart', 'edgeEnd', 'switchBase', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium', 'checked', 'disabled', 'input', 'thumb', 'track']);\nexport default switchClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"edge\", \"size\", \"sx\"];\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { alpha, darken, lighten } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport switchClasses, { getSwitchUtilityClass } from './switchClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    edge,\n    size,\n    color,\n    checked,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`],\n    switchBase: ['switchBase', `color${capitalize(color)}`, checked && 'checked', disabled && 'disabled'],\n    thumb: ['thumb'],\n    track: ['track'],\n    input: ['input']\n  };\n  const composedClasses = composeClasses(slots, getSwitchUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst SwitchRoot = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  width: 34 + 12 * 2,\n  height: 14 + 12 * 2,\n  overflow: 'hidden',\n  padding: 12,\n  boxSizing: 'border-box',\n  position: 'relative',\n  flexShrink: 0,\n  zIndex: 0,\n  // Reset the stacking context.\n  verticalAlign: 'middle',\n  // For correct alignment with the text.\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n}, ownerState.edge === 'start' && {\n  marginLeft: -8\n}, ownerState.edge === 'end' && {\n  marginRight: -8\n}, ownerState.size === 'small' && {\n  width: 40,\n  height: 24,\n  padding: 7,\n  [`& .${switchClasses.thumb}`]: {\n    width: 16,\n    height: 16\n  },\n  [`& .${switchClasses.switchBase}`]: {\n    padding: 4,\n    [`&.${switchClasses.checked}`]: {\n      transform: 'translateX(16px)'\n    }\n  }\n}));\nconst SwitchSwitchBase = styled(SwitchBase, {\n  name: 'MuiSwitch',\n  slot: 'SwitchBase',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.switchBase, {\n      [`& .${switchClasses.input}`]: styles.input\n    }, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 1,\n  // Render above the focus ripple.\n  color: theme.palette.mode === 'light' ? theme.palette.common.white : theme.palette.grey[300],\n  transition: theme.transitions.create(['left', 'transform'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${switchClasses.checked}`]: {\n    transform: 'translateX(20px)'\n  },\n  [`&.${switchClasses.disabled}`]: {\n    color: theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[600]\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    opacity: 0.5\n  },\n  [`&.${switchClasses.disabled} + .${switchClasses.track}`]: {\n    opacity: theme.palette.mode === 'light' ? 0.12 : 0.2\n  },\n  [`& .${switchClasses.input}`]: {\n    left: '-100%',\n    width: '300%'\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${switchClasses.checked}`]: {\n    color: theme.palette[ownerState.color].main,\n    '&:hover': {\n      backgroundColor: alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    [`&.${switchClasses.disabled}`]: {\n      color: theme.palette.mode === 'light' ? lighten(theme.palette[ownerState.color].main, 0.62) : darken(theme.palette[ownerState.color].main, 0.55)\n    }\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    backgroundColor: theme.palette[ownerState.color].main\n  }\n}));\nconst SwitchTrack = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Track',\n  overridesResolver: (props, styles) => styles.track\n})(({\n  theme\n}) => ({\n  height: '100%',\n  width: '100%',\n  borderRadius: 14 / 2,\n  zIndex: -1,\n  transition: theme.transitions.create(['opacity', 'background-color'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  backgroundColor: theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white,\n  opacity: theme.palette.mode === 'light' ? 0.38 : 0.3\n}));\nconst SwitchThumb = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Thumb',\n  overridesResolver: (props, styles) => styles.thumb\n})(({\n  theme\n}) => ({\n  boxShadow: theme.shadows[1],\n  backgroundColor: 'currentColor',\n  width: 20,\n  height: 20,\n  borderRadius: '50%'\n}));\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSwitch'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    edge = false,\n    size = 'medium',\n    sx\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    edge,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const icon = /*#__PURE__*/_jsx(SwitchThumb, {\n    className: classes.thumb,\n    ownerState: ownerState\n  });\n\n  return /*#__PURE__*/_jsxs(SwitchRoot, {\n    className: clsx(classes.root, className),\n    sx: sx,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(SwitchSwitchBase, _extends({\n      type: \"checkbox\",\n      icon: icon,\n      checkedIcon: icon,\n      ref: ref,\n      ownerState: ownerState\n    }, other, {\n      classes: _extends({}, classes, {\n        root: classes.switchBase\n      })\n    })), /*#__PURE__*/_jsx(SwitchTrack, {\n      className: classes.track,\n      ownerState: ownerState\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Switch;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getFormGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiFormGroup', slot);\n}\nconst formGroupClasses = generateUtilityClasses('MuiFormGroup', ['root', 'row']);\nexport default formGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"row\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getFormGroupUtilityClass } from './formGroupClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    row\n  } = ownerState;\n  const slots = {\n    root: ['root', row && 'row']\n  };\n  return composeClasses(slots, getFormGroupUtilityClass, classes);\n};\n\nconst FormGroupRoot = styled('div', {\n  name: 'MuiFormGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.row && styles.row];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'column',\n  flexWrap: 'wrap'\n}, ownerState.row && {\n  flexDirection: 'row'\n}));\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nconst FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormGroup'\n  });\n\n  const {\n    className,\n    row = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    row\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormGroupRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   * @default false\n   */\n  row: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default FormGroup;","import { generateUtilityClasses, generateUtilityClass } from '@mui/core';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label']);\nexport default formControlLabelClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"className\", \"componentsProps\", \"control\", \"disabled\", \"disableTypography\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { useFormControl } from '../FormControl';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`],\n    label: ['label', disabled && 'disabled']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\n\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  }\n}, ownerState.labelPlacement === 'start' && {\n  flexDirection: 'row-reverse',\n  marginLeft: 16,\n  // used for row presentation of radio/checkbox\n  marginRight: -11\n}, ownerState.labelPlacement === 'top' && {\n  flexDirection: 'column-reverse',\n  marginLeft: 16\n}, ownerState.labelPlacement === 'bottom' && {\n  flexDirection: 'column',\n  marginLeft: 16\n}, {\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: theme.palette.text.disabled\n    }\n  }\n}));\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n\n  const {\n    className,\n    componentsProps = {},\n    control,\n    disabled: disabledProp,\n    disableTypography,\n    label,\n    labelPlacement = 'end'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl();\n  let disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  const controlProps = {\n    disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    label,\n    labelPlacement\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), label.type === Typography || disableTypography ? label : /*#__PURE__*/_jsx(Typography, _extends({\n      component: \"span\",\n      className: classes.label\n    }, componentsProps.typography, {\n      children: label\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;"],"sourceRoot":""}